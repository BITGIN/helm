apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "pgbouncer.fullname" . }}
  labels:
{{ include "pgbouncer.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "pgbouncer.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "pgbouncer.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ template "pgbouncer.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          env:
          {{- range $k, $v := .Values.env }}
            - name: {{ $k | quote }}
              value: {{ $v | quote }}
          {{- end }}
          {{- if and .Values.secret.pgbouncer.name .Values.secret.pgbouncer.key }}
            - name: PGBOUNCER_USERLIST
              value: '"{{ .Values.env.PGBOUNCER_AUTH_USER }}" "{{ include "getSecret" (dict "Name" .Values.secret.pgbouncer.name "Key" .Values.secret.pgbouncer.key) }}"'
          {{- end }}
          {{- if and .Values.secret.postgres.name .Values.secret.postgres.key }}
            - name: POSTGRESQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.postgres.name }}
                  key: {{ .Values.secret.postgres.key }}
          {{- end }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: pgbouncer
              containerPort: {{ .Values.env.PGBOUNCER_PORT }}
              protocol: TCP
          readinessProbe:
            tcpSocket:
              port: {{ .Values.env.PGBOUNCER_PORT }}
          lifecycle:
            preStop:
              exec:
                # https://freecontent.manning.com/handling-client-requests-properly-with-kubernetes/
                command: ["/bin/sh", "-c", "sleep 5"]
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
